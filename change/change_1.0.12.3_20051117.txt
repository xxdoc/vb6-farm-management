/*===*/
CREATE TABLE STATUS_GROUP
(
   STATUS_GROUP_ID       ID_TYPE NOT NULL,
   STATUS_GROUP_NO       CODE_TYPE,
   STATUS_GROUP_NAME     NAME_TYPE,

   CREATE_DATE           DATE_TYPE NOT NULL,
   CREATE_BY             ID_TYPE NOT NULL,
   MODIFY_DATE           DATE_TYPE NOT NULL,
   MODIFY_BY             ID_TYPE NOT NULL
);
CREATE GENERATOR STATUS_GROUP_SEQ;

ALTER TABLE STATUS_GROUP ADD CONSTRAINT STATUS_GROUP_ID_PK PRIMARY KEY (STATUS_GROUP_ID);
/*===*/

/*===*/
CREATE TABLE SGROUP_ITEM
(
   SGROUP_ITEM_ID        ID_TYPE NOT NULL,
   STATUS_GROUP_ID       ID_TYPE NOT NULL,
   STATUS_ID             ID_TYPE NOT NULL,
   SELECT_FLAG           FLAG_TYPE,
   GUI_ID                ID_TYPE,

   CREATE_DATE           DATE_TYPE NOT NULL,
   CREATE_BY             ID_TYPE NOT NULL,
   MODIFY_DATE           DATE_TYPE NOT NULL,
   MODIFY_BY             ID_TYPE NOT NULL
);

CREATE GENERATOR SGROUP_ITEM_SEQ;

ALTER TABLE SGROUP_ITEM ADD CONSTRAINT SGROUP_ITEM_ID_PK PRIMARY KEY (SGROUP_ITEM_ID);
ALTER TABLE SGROUP_ITEM ADD CONSTRAINT SGROUP_ITEM_SGROUP_ID_FK FOREIGN KEY (STATUS_GROUP_ID) REFERENCES STATUS_GROUP;
ALTER TABLE SGROUP_ITEM ADD CONSTRAINT SGROUP_ITEM_STATUS_ID_FK FOREIGN KEY (STATUS_ID) REFERENCES PRODUCT_STATUS;
/*===*/

ALTER TABLE BILLING_DOC ADD INVENTORY_DOC_ID ID_TYPE;
ALTER TABLE BILLING_DOC ADD CONSTRAINT BILLING_DOC_INV_DOC_ID_FK FOREIGN KEY (INVENTORY_DOC_ID) REFERENCES INVENTORY_DOC;

ALTER TABLE BILLING_DOC ADD COMMIT_FLAG FLAG_TYPE;

ALTER TABLE EXPORT_ITEM ADD LINK_ID ID_TYPE;

/*== DO Item ==*/

/*== Age range ==*/

ALTER DOMAIN MONEY_TYPE TYPE NUMERIC(12,7);

UPDATE IMPORT_ITEM SET NEW_PRICE = ((CURRENT_AMOUNT-IMPORT_AMOUNT)*PREVIOUS_PRICE)+TOTAL_INCLUDE_PRICE

ALTER TABLE EXPORT_ITEM ADD TOTAL_PRICE MONEY_TYPE;

ALTER TABLE BILLING_DOC ADD SUPPLIER_ID ID_TYPE;


ALTER TABLE BILLING_DOC ADD CONSTRAINT BILLING_DOC_SUPPLIER_ID_FK FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER;

ALTER TABLE BILLING_DOC DROP CONSTRAINT BILLING_DOC_ACCOUNT_ID_FK;


CREATE TABLE RO_ITEM
(
   RO_ITEM_ID            ID_TYPE NOT NULL,
   BILLING_DOC_ID        ID_TYPE NOT NULL,
   EXPENSE_TYPE          ID_TYPE,
   PART_ITEM_ID          ID_TYPE,
   LOCATION_ID           ID_TYPE,
   ITEM_AMOUNT           MONEY_TYPE,
   TOTAL_WEIGHT          MONEY_TYPE,
   AVG_WEIGHT            MONEY_TYPE,
   TOTAL_PRICE           MONEY_TYPE,
   AVG_PRICE             MONEY_TYPE,
   GUI_ID                ID_TYPE,
   PIG_STATUS            ID_TYPE,
   LINK_ID               ID_TYPE,
   EXPENSE_DESC          DESC_TYPE,
   TRANSACTION_SEQ       ID_TYPE,

   CREATE_DATE           DATE_TYPE NOT NULL,
   CREATE_BY             ID_TYPE NOT NULL,
   MODIFY_DATE           DATE_TYPE NOT NULL,
   MODIFY_BY             ID_TYPE NOT NULL
);

ALTER TABLE IMPORT_ITEM ADD BIRTH_DATE DATE_TYPE;

UPDATE IMPORT_ITEM II SET II.BIRTH_DATE = (SELECT IVD.DOCUMENT_DATE FROM INVENTORY_DOC IVD WHERE IVD.INVENTORY_DOC_ID = II.INVENTORY_DOC_ID)

CREATE TABLE CAPITAL_MOVEMENT;

CREATE TABLE MOVEMENT_ITEM;

ALTER TABLE PRODUCT_STATUS ADD CAPITAL_MOVE_FLAG FLAG_TYPE;

alter table import_item add   EXPENSE_TYPE          ID_TYPE;

create table MANAGEMENT_CONFIG

ALTER TABLE IMPORT_ITEM ADD PIG_STATUS ID_TYPE;
ALTER TABLE IMPORT_ITEM ADD CONSTRAINT IMPORT_ITEM_STATUS_ID_FK FOREIGN KEY (PIG_STATUS) REFERENCES PRODUCT_STATUS;

UPDATE IMPORT_ITEM II
SET II.PIG_STATUS = (SELECT EI.PIG_STATUS FROM EXPORT_ITEM EI WHERE II.GUI_ID = EI.GUI_ID);